import java.util.Arrays;

public class PileBox {

    public static void main(String[] args) {
//        int[][] box = {{1,1,1},{2,2,2},{3,3,3}};
//        int[][] box = {{1,1,1},{2,3,4},{2,6,7},{3,4,5}};
//        int[][] box = {{9, 9, 10}, {8, 10, 9}, {9, 8, 10}, {9, 8, 10}, {10, 8, 8}, {9, 8, 9},
//                {9, 8, 8}, {8, 9, 10}, {10, 9, 10}, {8, 8, 10}, {10, 9, 10}, {10, 9, 8}, {8, 9, 9},
//                {9, 10, 8}, {8, 9, 9}, {10, 10, 9}, {8, 9, 10}, {8, 10, 10}, {8, 9, 10}, {10, 10, 8},
//                {10, 10, 9}, {9, 10, 10}, {10, 8, 9}, {10, 10, 9}, {8, 9, 10}, {8, 8, 9}, {8, 10, 10},
//                {9, 9, 10}, {10, 8, 8}, {10, 10, 8}, {8, 9, 9}, {8, 9, 8}, {10, 10, 8}, {8, 10, 8},
//                {10, 9, 10}, {9, 9, 10}, {9, 9, 9}, {8, 9, 8}, {9, 8, 8}, {8, 9, 10}, {10, 10, 8},
//                {9, 9, 9}, {10, 10, 10}, {10, 9, 8}, {9, 8, 9}, {8, 8, 10}, {8, 8, 8}, {8, 8, 8}, {8, 9, 10},
//                {10, 9, 8}, {8, 10, 8}, {8, 10, 10}, {9, 10, 10}, {8, 8, 9}, {9, 9, 9}, {10, 8, 8},
//                {8, 10, 10}, {9, 10, 9}, {9, 9, 8}, {8, 10, 9}, {9, 8, 8}, {9, 9, 10}, {9, 10, 10}, {8, 8, 10}};
        int[][] box = {{3, 1, 4}, {10, 16, 15}, {9, 10, 20}, {8, 9, 8}, {19, 7, 8}, {10, 8, 2}, {18, 16, 6}, {8, 4, 9}, {13, 1, 10}, {18, 4, 6}, {14, 8, 16}, {13, 18, 2}, {17, 10, 16}, {4, 6, 6}, {11, 17, 7}, {1, 8, 7}, {16, 10, 15}, {18, 18, 4}, {7, 2, 12}, {1, 7, 3}, {8, 5, 4}, {15, 4, 9}, {16, 7, 6}, {12, 13, 20}, {2, 4, 3}, {12, 13, 20}, {1, 2, 13}, {16, 20, 11}, {14, 4, 17}, {16, 15, 8}, {15, 18, 17}, {4, 4, 8}, {5, 18, 1}, {16, 10, 10}, {17, 19, 13}, {18, 20, 13}, {17, 5, 19}, {5, 2, 17}, {7, 13, 13}, {9, 11, 12}, {11, 10, 12}, {10, 16, 5}, {4, 3, 18}, {18, 11, 18}, {14, 14, 16}, {18, 1, 14}, {7, 5, 19}, {10, 15, 11}, {2, 11, 8}, {6, 8, 17}, {12, 1, 12}, {8, 4, 17}, {13, 14, 11}, {17, 20, 11}, {15, 10, 15}, {7, 6, 19}, {14, 13, 15}, {11, 9, 12}, {19, 14, 2}, {14, 11, 8}, {4, 2, 18}, {12, 20, 15}, {2, 12, 18}, {16, 6, 9}};
//        int[][] box = {{4, 3, 17}, {3, 17, 17}, {8, 20, 14}, {3, 19, 15}, {13, 6, 10}, {10, 8, 8}, {17, 18, 13}, {18, 4, 11}, {10, 9, 6}, {18, 11, 7}, {3, 14, 2}, {11, 11, 1}, {5, 11, 20}, {2, 15, 5}, {9, 1, 16}, {16, 4, 11}, {10, 15, 20}, {19, 12, 5}, {17, 8, 11}, {18, 20, 19}, {14, 11, 15}, {13, 17, 2}, {2, 10, 15}, {17, 4, 4}, {16, 17, 3}, {9, 1, 18}, {17, 14, 12}, {14, 16, 6}, {18, 11, 17}, {12, 7, 9}, {6, 2, 2}, {18, 10, 11}, {16, 16, 20}, {4, 11, 16}, {13, 3, 7}, {2, 15, 4}, {3, 10, 1}, {15, 8, 9}, {2, 10, 15}, {20, 10, 4}, {15, 11, 19}, {9, 19, 2}, {18, 16, 17}, {14, 19, 12}, {20, 3, 17}, {11, 15, 10}, {13, 1, 20}, {12, 9, 6}, {5, 6, 4}, {10, 19, 7}, {1, 18, 15}, {3, 14, 13}, {19, 12, 17}, {15, 17, 1}, {8, 12, 15}, {4, 5, 18}, {12, 15, 7}, {14, 15, 12}, {19, 15, 9}, {4, 10, 5}, {3, 11, 2}, {12, 3, 14}, {12, 2, 6}, {13, 20, 4}, {19, 9, 5}, {5, 5, 13}, {5, 1, 12}, {14, 11, 8}, {20, 19, 6}, {20, 14, 17}, {19, 2, 18}, {2, 3, 9}, {14, 19, 20}, {3, 11, 13}, {18, 5, 13}, {15, 20, 15}, {4, 20, 7}, {19, 12, 17}, {19, 7, 7}, {9, 3, 10}, {7, 17, 11}, {6, 6, 11}, {2, 5, 19}, {9, 1, 7}, {4, 13, 1}, {10, 6, 6}, {19, 10, 15}, {17, 2, 4}, {14, 16, 7}, {10, 3, 15}, {18, 1, 9}, {7, 10, 1}, {13, 1, 17}, {16, 18, 7}, {5, 18, 18}, {16, 15, 15}, {11, 15, 12}, {9, 8, 11}, {16, 10, 18}, {18, 8, 2}, {2, 1, 10}, {8, 13, 15}, {12, 2, 12}, {8, 14, 3}, {14, 6, 5}, {1, 10, 15}, {17, 20, 18}, {2, 3, 7}, {14, 4, 10}, {6, 4, 7}, {9, 12, 7}, {11, 17, 9}, {7, 20, 13}, {16, 18, 18}, {14, 8, 11}, {1, 7, 14}, {19, 5, 17}, {20, 12, 17}, {15, 5, 20}, {6, 18, 13}, {9, 7, 7}, {10, 16, 10}, {5, 13, 16}, {6, 7, 3}, {15, 6, 4}, {11, 13, 17}, {4, 5, 17}, {8, 16, 16}, {2, 6, 13}, {19, 20, 1}, {6, 8, 15}, {9, 15, 2}, {5, 8, 1}, {12, 12, 18}, {14, 13, 1}, {4, 5, 7}, {7, 9, 13}, {4, 11, 16}, {5, 15, 16}, {18, 13, 19}, {20, 12, 13}, {14, 15, 14}, {5, 16, 18}, {5, 14, 7}, {4, 9, 2}, {15, 10, 7}, {17, 1, 11}, {3, 9, 5}, {9, 13, 20}, {5, 6, 12}, {18, 18, 16}, {2, 17, 2}, {17, 11, 16}, {11, 9, 8}, {7, 4, 9}, {9, 7, 10}, {4, 8, 16}, {14, 5, 1}, {14, 11, 10}, {10, 16, 20}, {9, 19, 1}, {4, 13, 14}, {8, 13, 11}, {14, 6, 5}, {3, 5, 15}, {2, 8, 11}, {18, 11, 14}, {13, 10, 20}, {1, 3, 9}, {2, 1, 7}, {4, 15, 17}, {4, 2, 8}, {7, 9, 12}, {10, 4, 5}, {4, 20, 16}, {17, 13, 11}, {11, 7, 8}, {15, 9, 9}, {2, 10, 2}, {19, 4, 3}, {7, 6, 1}, {12, 5, 20}, {10, 4, 17}, {17, 20, 2}, {13, 9, 4}, {10, 20, 17}, {15, 4, 6}, {18, 4, 2}, {18, 6, 18}, {18, 5, 12}, {5, 2, 7}, {20, 14, 1}, {3, 2, 10}, {2, 18, 17}, {10, 9, 20}, {11, 19, 1}, {3, 7, 20}, {9, 7, 4}, {3, 14, 16}, {15, 3, 3}, {16, 6, 13}, {12, 11, 11}, {2, 12, 16}, {7, 16, 16}, {5, 18, 3}, {17, 18, 16}, {19, 2, 7}, {14, 14, 19}, {15, 18, 6}, {15, 2, 16}, {14, 16, 17}, {6, 19, 1}, {20, 6, 2}, {11, 3, 12}, {20, 4, 2}, {8, 11, 8}, {5, 18, 11}, {11, 11, 19}, {8, 8, 6}, {1, 11, 4}, {5, 12, 18}, {18, 8, 2}, {13, 18, 16}, {15, 16, 17}, {19, 17, 19}, {9, 9, 7}, {10, 10, 12}, {18, 2, 15}, {15, 5, 7}, {12, 16, 16}, {5, 16, 11}, {4, 1, 13}, {18, 16, 11}, {15, 11, 1}, {12, 3, 6}, {3, 4, 5}, {4, 10, 1}, {19, 18, 6}, {7, 10, 3}, {18, 2, 18}, {12, 12, 8}, {20, 3, 15}, {14, 6, 2}, {2, 11, 5}, {11, 1, 5}, {15, 10, 5}, {13, 18, 6}, {20, 2, 5}, {17, 9, 2}, {1, 16, 6}, {7, 3, 8}, {9, 11, 6}, {5, 2, 2}, {16, 11, 17}, {1, 18, 18}, {6, 4, 17}, {2, 17, 17}, {12, 7, 9}, {8, 4, 8}, {6, 14, 5}, {7, 2, 3}, {16, 2, 11}, {5, 20, 14}, {1, 5, 12}, {6, 18, 2}, {17, 15, 3}, {9, 6, 18}, {12, 6, 16}, {9, 8, 8}, {18, 5, 18}, {14, 8, 12}, {20, 1, 4}, {8, 18, 19}, {7, 7, 17}, {10, 7, 9}, {6, 15, 17}, {14, 5, 9}, {2, 1, 15}, {7, 5, 4}, {15, 7, 17}, {12, 10, 1}, {9, 19, 9}, {15, 13, 1}, {6, 4, 3}, {1, 4, 15}, {20, 10, 17}, {2, 5, 15}, {3, 7, 9}, {1, 17, 7}, {2, 14, 15}, {11, 7, 14}, {1, 8, 19}, {2, 18, 1}, {6, 4, 20}, {20, 15, 13}, {20, 20, 20}, {10, 20, 1}, {8, 1, 7}, {10, 17, 20}, {8, 13, 16}, {14, 10, 7}, {9, 5, 18}, {17, 1, 13}, {17, 15, 16}, {7, 12, 2}, {1, 4, 6}, {9, 8, 13}, {12, 18, 15}, {17, 13, 18}, {16, 17, 2}, {7, 20, 10}, {20, 19, 6}, {11, 12, 12}, {9, 5, 18}, {18, 17, 20}, {5, 12, 20}, {8, 8, 11}, {17, 12, 3}, {7, 2, 13}, {14, 19, 17}, {20, 2, 2}, {10, 5, 14}, {19, 6, 2}, {9, 16, 12}, {18, 14, 20}, {8, 19, 2}, {6, 2, 9}};
//        int[][] box = {{18,18,18},{18,18,18},{18,18,18},{18,18,18},{18,18,18}};
        PileBox pileBox = new PileBox();
        System.out.println(pileBox.pileBox(box));
    }

    /**
     * 先排序后递归，有效减少递归时间，但是数组3000长度以上还是会超时
     * 贪心算法感觉有点问题，我看题解是选取能叠上去的高度最高盒子，循环一次即可。
     * {1,1,200},{2,2,199}, {3,3,198}这样就会有问题
     * @param box
     * @return
     */
    public int pileBox(int[][] box) {
        Arrays.sort(box, (o1, o2) -> {
            if (o1[0] == o2[0]) {
                if (o1[1] == o2[1]) {
                    return o2[2] - o1[2];
                } else {
                    return o2[1] - o1[1];
                }
            } else {
                return o2[0] - o1[0];
            }
        });
        return pileBox(0, -1, box);
    }

    public int pileBox(int high, int base, int[][] box) {
        int max = 0;
        int[] box1 = null;
        //循环判断每一个箱子
        for (int i = base + 1; i < box.length; i++) {
            //如果能叠上去
            if (base != -1) {
                box1 = box[base];
            }
            if (canSetBox(box[i], box1)) {
                //计算叠后的高度，底座换成该箱子
                int newHigh = pileBox(high + box[i][2], i, box);
                if (newHigh > max) {
                    max = newHigh;
                }
            }
        }
        if (high > max) {
            max = high;
        }
        return max;
    }

    public boolean canSetBox(int[] up, int[] base) {
        return base == null || up[0] < base[0] && up[1] < base[1] && up[2] < base[2];
    }
}
